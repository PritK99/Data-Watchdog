openapi: 3.0.0
info:
  title: Flask PII Analysis API
  version: 1.0.0
  description: API for PII analysis and data management

servers:
  - url: http://localhost:5000

paths:
  /:
    get:
      summary: Home Page
      responses:
        '200':
          description: HTML content of home page
          content:
            text/html:
              schema:
                type: string

  /configure:
    get:
      summary: Configure Page
      responses:
        '200':
          description: HTML content of configure page
          content:
            text/html:
              schema:
                type: string

  /dashboard:
    get:
      summary: Dashboard Page
      responses:
        '200':
          description: HTML content of dashboard page
          content:
            text/html:
              schema:
                type: string

  /view:
    get:
      summary: View Page
      responses:
        '200':
          description: HTML content of view page
          content:
            text/html:
              schema:
                type: string

  /get_analysis:
    get:
      summary: Get PII Analysis Results
      responses:
        '200':
          description: JSON containing analysis results
          content:
            application/json:
              schema:
                type: object

  /get_files:
    post:
      summary: Get Files from AWS S3
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                access_key:
                  type: string
                secret_key:
                  type: string
                region:
                  type: string
              required:
                - access_key
                - secret_key
                - region
      responses:
        '200':
          description: Successfully fetched files
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
        '400':
          description: Missing AWS credentials
        '403':
          description: Invalid AWS credentials
        '500':
          description: Server error

  /connect_postgres:
    post:
      summary: Connect to PostgreSQL and Fetch Data
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                db_host:
                  type: string
                db_port:
                  type: string
                db_name:
                  type: string
                db_user:
                  type: string
                db_password:
                  type: string
              required:
                - db_host
                - db_port
                - db_name
                - db_user
                - db_password
      responses:
        '200':
          description: Successfully connected and fetched data
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  tables:
                    type: array
                    items:
                      type: string
        '400':
          description: Missing PostgreSQL credentials
        '500':
          description: Server error

  /download_csv:
    get:
      summary: Download CSV File
      responses:
        '200':
          description: CSV file download
          content:
            text/csv:
              schema:
                type: string
                format: binary

  /get_results:
    get:
      summary: Get Analysis Results
      responses:
        '200':
          description: JSON containing analysis results
          content:
            application/json:
              schema:
                type: object

components:
  schemas: {}